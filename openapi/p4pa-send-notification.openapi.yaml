openapi: 3.0.3
info:
  title: P4PA-SEND-Service API
  description: API and Models.
  version: 0.0.1
servers:
  - url: "http://localhost:8080/p4pasend"
paths:
  /notification:
    post:
      tags:
        - Notification
      summary: Create notification
      description: Create initial notification
      operationId: createSendNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNotificationResponse'
        '400':
          description: Invalid request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /notification/{sendNotificationId}:
    get:
      tags:
        - Notification
      summary: get send notification
      description: get send notification
      operationId: getSendNotification
      parameters:
        - name: sendNotificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SendNotificationDTO'
        '400':
          description: Invalid request
        '403':
          description: Forbidden
        '404':
          description: Notification not found
        '500':
          description: Internal server error
  /notification/{sendNotificationId}/start:
    post:
      tags:
        - Notification
      summary: start notification process
      description: Start request to authorize preload file to SEND
      operationId: startNotification
      parameters:
        - name: sendNotificationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadFileRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StartNotificationResponse'
        '400':
          description: Invalid request
        '403':
          description: Forbidden
        '404':
          description: Notification not found
        '409':
          description: Wrong notification status
        '500':
          description: Internal server error
  /send/{sendNotificationId}/preload:
    post:
      tags:
        - Send
      summary: preload file to SEND process
      description: request to authorize preload file to SEND
      operationId: preloadSendFile
      parameters:
        - name: sendNotificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '403':
          description: Forbidden
        '404':
          description: Notification not found
        '409':
          description: Wrong notification status
        '500':
          description: Internal server error
  /send/{sendNotificationId}/load:
    post:
      tags:
        - Send
      summary: load file to SEND archive process
      description: request to load file to SEND archive
      operationId: uploadSendFile
      parameters:
        - name: sendNotificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '403':
          description: Forbidden
        '404':
          description: Notification not found
        '409':
          description: Wrong notification status
        '500':
          description: Internal server error
  /send/{sendNotificationId}/delivery:
    post:
      tags:
        - Send
      summary: delivery notification
      description: delivery notification
      operationId: deliveryNotification
      parameters:
        - name: sendNotificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '403':
          description: Forbidden
        '404':
          description: Notification not found
        '409':
          description: Wrong notification status
        '500':
          description: Internal server error
  /send/{sendNotificationId}/status:
    get:
      tags:
        - Send
      summary: notification status
      description: notification status
      operationId: notificationStatus
      parameters:
        - name: sendNotificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: 'NewNotificationRequestStatusResponse'
        '400':
          description: Invalid request
        '403':
          description: Forbidden
        '404':
          description: Notification not found
        '500':
          description: Internal server error
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    CreateNotificationRequest:
      type: object
      required:
        - paProtocolNumber
        - recipients
      properties:
        paProtocolNumber:
          type: string
        recipient:
          $ref: '#/components/schemas/Recipient'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        notificationFeePolicy:
          type: string
          enum: [ FLAT_RATE, DELIVERY_MODE ]
        physicalCommunicationType:
          type: string
          enum: [ AR_REGISTERED_LETTER, REGISTERED_LETTER_890 ]
        senderDenomination:
          type: string
        senderTaxId:
          type: string
        amount:
          type: number
        paymentExpirationDate:
          type: string
          format: date
        taxonomyCode:
          type: string
        paFee:
          type: integer
        vat:
          type: integer
        pagoPaIntMode:
          type: string
          enum: [ SYNC, ASYNC, NONE ]
    Recipient:
      type: object
      required:
        - recipientType
        - taxId
        - denomination
        - physicalAddress
      properties:
        recipientType:
          type: string
          enum: [PF, PG]
        taxId:
          type: string
        denomination:
          type: string
        physicalAddress:
          $ref: '#/components/schemas/Address'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    Address:
      type: object
      properties:
        address:
          type: string
        zip:
          type: string
        municipality:
          type: string
        province:
          type: string
    Payment:
      type: object
      properties:
        pagoPa:
          $ref: '#/components/schemas/PagoPa'
    PagoPa:
      type: object
      properties:
        noticeCode:
          type: string
        creditorTaxId:
          type: string
        applyCost:
          type: boolean
        attachment:
          $ref: '#/components/schemas/Attachment'
    Attachment:
      type: object
      properties:
        digest:
          type: string
        contentType:
          type: string
        fileName:
          type: string
    Document:
      type: object
      properties:
        digest:
          type: string
        contentType:
          type: string
        fileName:
          type: string
    LoadFileRequest:
      type: object
      properties:
        digest:
          type: string
        fileName:
          type: string
        path:
          type: string
    CreateNotificationResponse:
      type: object
      properties:
        sendNotificationId:
          type: string
        preloadRef:
          type: array
          items:
            $ref: '#/components/schemas/PreloadNotificationDTO'
        status:
          type: string
    StartNotificationResponse:
      type: object
      properties:
        workFlowId:
          type: integer
          format: int64
    PreloadNotificationDTO:
      type: object
      properties:
        preloadId:
          type: string
        preloadUrl:
          type: string
    SendNotificationDTO:
      type: object
      properties:
        sendNotificationId:
          type: string
        status:
          type: string
    SendNotificationErrorDTO:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - SEND_NOTIFICATION_NOT_FOUND
            - SEND_NOTIFICATION_BAD_REQUEST
            - SEND_NOTIFICATION_GENERIC_ERROR
        message:
          type: string
